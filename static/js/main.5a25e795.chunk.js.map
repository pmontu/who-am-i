{"version":3,"sources":["config.js","hooks.js","PageNotFound.js","Nav.js","Home.js","About.js","Capture.js","Loading.js","Emotion.js","actions.js","App.js","serviceWorker.js","index.js"],"names":["process","DEV_SERVER_PORT","ReactGA","initialize","className","to","CenteredTabs","history","useHistory","selectedLocation","location","useLocation","val","pathname","useIntialValue","React","useState","value","setValue","changeLocation","useCallback","newValue","push","useEffect","Paper","Tabs","onChange","event","indicatorColor","textColor","centered","Tab","icon","style","padding","href","Capture","props","height","width","onTakePhoto","dataUri","b64_img","handleTakePhoto","Loading","CircularProgress","Value","text","classes","emotionBar","flex","display","overflowX","justifyContent","Emotion","state","isLoading","setIsLoading","data","setData","img","Promise","resolve","reject","fetch","method","headers","accept","body","JSON","stringify","then","response","ok","Error","json","catch","err","length","map","person","index","emotions","Object","entries","faceAttributes","emotion","e","Math","round","filter","sort","a","b","getEmotions","age","key","src","alt","App","url","search","pageview","usePageViews","root","exact","path","Home","About","component","PageNotFound","flexDirection","position","basename","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.5a25e795.chunk.js","sourcesContent":["const DEV_SERVER_PORT = process.env.DEV_SERVER_PORT || 7071;\nexport const SERVER_BASE_PATH =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://hari-student.azurewebsites.net\"\n    : `http://localhost:${DEV_SERVER_PORT}`;\n\nexport const PRODUCTION = process.env.NODE_ENV === \"production\";\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { PRODUCTION } from \"./config\";\nimport ReactGA from \"react-ga\";\nReactGA.initialize(\"UA-169321690-1\");\n\nexport function usePageViews() {\n  let location = useLocation();\n  useEffect(() => {\n    if (PRODUCTION) {\n      const url = `${location.pathname}${location.search}`;\n      ReactGA.pageview(url);\n    }\n  }, [location]);\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => (\n  <div className=\"center\">\n    <h1>Page Not Found</h1>\n    <Link to=\"/\">Go back Home</Link>\n  </div>\n);\n","import React, { useEffect, useCallback } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport InsertEmoticonRoundedIcon from \"@material-ui/icons/InsertEmoticonRounded\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport default function CenteredTabs() {\n  const history = useHistory();\n  const selectedLocation = useIntialValue();\n  const [value, setValue] = React.useState(selectedLocation);\n\n  const changeLocation = useCallback(\n    (newValue) => {\n      if (newValue === 0) history.push(\"/\");\n      else if (newValue === 1) history.push(\"/face-capture\");\n      else if (newValue === 2) history.push(\"/about\");\n    },\n    [history]\n  );\n\n  useEffect(() => {\n    setValue(selectedLocation);\n  }, [selectedLocation]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    changeLocation(newValue);\n  };\n\n  return (\n    <Paper>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        centered\n      >\n        <Tab icon={<HomeRoundedIcon />} />\n        <Tab icon={<InsertEmoticonRoundedIcon />} />\n        <Tab icon={<GitHubIcon />} />\n      </Tabs>\n    </Paper>\n  );\n}\n\nfunction useIntialValue() {\n  const location = useLocation();\n  let val = 0;\n  if (location.pathname === \"/\") val = 0;\n  else if (location.pathname === \"/face-capture\") val = 1;\n  else if (location.pathname === \"/result\") val = 1;\n  else if (location.pathname === \"/about\") val = 2;\n  return val;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => (\n  <div className=\"center\" style={{ padding: 20 }}>\n    <p>\n      This project is a proof of concept to integrate face recognition machine\n      learning service that is provided by a cloud service such as azure with\n      our application.\n    </p>\n    <p>\n      This application estimates your age and emotions using azure face api.{\" \"}\n      <Link to=\"/face-capture\">Click here to try.</Link>\n    </p>\n  </div>\n);\n","import React from \"react\";\n\nexport default () => (\n  <div className=\"center\">\n    <a href=\"https://github.com/pmontu/who-am-i\">View Source Code on Github</a>\n    <br />\n    <a href=\"http://www.pythoncoach.in/\">Visit my blog</a>\n  </div>\n);\n","import React from \"react\";\nimport Camera from \"react-html5-camera-photo\";\nimport \"react-html5-camera-photo/build/css/index.css\";\nimport { useHistory } from \"react-router-dom\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nfunction Capture(props) {\n  const history = useHistory();\n\n  function handleTakePhoto(dataUri) {\n    history.push(\"/result\", { b64_img: dataUri });\n  }\n\n  return (\n    <AutoSizer>\n      {({ height, width }) => (\n        <div style={{ width: width, height: height }}>\n          <Camera\n            onTakePhoto={(dataUri) => {\n              handleTakePhoto(dataUri);\n            }}\n          />\n        </div>\n      )}\n    </AutoSizer>\n  );\n}\n\nexport default Capture;\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core/\";\n\nfunction Loading() {\n  return (\n    <div className=\"center\">\n      <CircularProgress />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { postImg } from \"./actions\";\nimport Loading from \"./Loading\";\n\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nconst getEmotions = (person) =>\n  Object.entries(person.faceAttributes.emotion)\n    .map((e) => [e[0], Math.round(e[1] * 100, 0)])\n    .filter((e) => e[1] !== 0)\n    .sort((a, b) => b[1] - a[1]);\n\nfunction Emotion() {\n  const location = useLocation();\n  const b64_img = (location.state || {}).b64_img;\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    if (!b64_img) history.push(\"/face-capture\");\n    else {\n      setIsLoading(true);\n      postImg(b64_img).then((data) => {\n        setIsLoading(false);\n        setData(data);\n      });\n    }\n  }, [b64_img, history]);\n\n  return (\n    <div\n      className=\"center\"\n      style={{\n        flex: 1,\n        display: \"flex\",\n      }}\n    >\n      {isLoading ? (\n        <Loading />\n      ) : data.length > 0 ? (\n        <>\n          {data.map((person, index) => {\n            const emotions = getEmotions(person);\n            const age = person.faceAttributes.age;\n            return (\n              <div key={index} style={classes.emotionBar}>\n                <div style={{ display: \"flex\" }} className=\"values\">\n                  <Value value={age} text={`${age} years`} key=\"age\" />\n                  {emotions.map((e, index) => (\n                    <Value value={e[1]} text={e[0]} key={index} />\n                  ))}\n                </div>\n              </div>\n            );\n          })}\n        </>\n      ) : (\n        \"No data available.\"\n      )}\n      <img src={b64_img} alt=\"selfi\" />\n    </div>\n  );\n}\n\nfunction Value({ value, text }) {\n  return (\n    <div\n      style={{\n        padding: \"20px 20px 20px 20px\",\n        width: \"125px\",\n      }}\n    >\n      <CircularProgressbar value={value} text={text} />\n    </div>\n  );\n}\n\nconst classes = {\n  emotionBar: {\n    flex: 1,\n    display: \"flex\",\n    overflowX: \"scroll\",\n    width: \"100%\",\n    justifyContent: \"center\",\n  },\n};\n\nexport default Emotion;\n","import { SERVER_BASE_PATH } from \"./config\";\n\nexport function postImg(img) {\n  return new Promise((resolve, reject) => {\n    fetch(`${SERVER_BASE_PATH}/api/face`, {\n      method: \"POST\",\n      headers: { accept: \"application/json\" },\n      body: JSON.stringify({ b64_img: img }),\n    })\n      .then((response) => {\n        if (!response.ok) throw Error(\"failed to fetch\");\n        return response.json();\n      })\n      .then((data) => resolve(data))\n      .catch((err) => reject(err));\n  });\n}\n","import React from \"react\";\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router,\n  Redirect,\n} from \"react-router-dom\";\nimport { usePageViews } from \"./hooks\";\nimport PageNotFound from \"./PageNotFound\";\nimport Nav from \"./Nav\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Capture from \"./Capture\";\nimport Emotion from \"./Emotion\";\nimport \"./App.css\";\n\nfunction App(props) {\n  usePageViews();\n\n  return (\n    <div style={classes.root}>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/face-capture\">\n          <Capture />\n        </Route>\n        <Route path=\"/result\">\n          <Emotion />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/404\" component={PageNotFound} />\n        <Redirect to=\"/404\" />\n      </Switch>\n    </div>\n  );\n}\n\nconst classes = {\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"fixed\",\n  },\n};\n\nexport default () => (\n  <Router basename=\"/who-am-i\">\n    <App />\n  </Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}